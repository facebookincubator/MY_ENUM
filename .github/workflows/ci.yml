name: CI

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        string_view: [fmt, std]
      fail-fast: false

    steps:
    - uses: actions/checkout@v2

    - uses: DoozyX/clang-format-lint-action@v0.5
      with:
        source: '.'
        extensions: 'h,cpp'
        clangFormatVersion: 9
      if: matrix.os == 'ubuntu-18.04'

    - name: Install dependencies (Linux)
      run: |
        set -x # echo on
        sudo apt install libboost-system-dev
        git clone https://github.com/google/googletest
        cd googletest
        mkdir build
        cd build
        cmake ..
        make
        sudo make install
        cd ../..
        git clone https://github.com/fmtlib/fmt.git
        cd fmt
        git checkout 6.2.1
        mkdir build
        cd build
        cmake .. -DFMT_TEST=OFF
        make -j2
        sudo make install
        cd ../..
        git clone https://github.com/CLIUtils/CLI11.git
        cd CLI11
        git checkout v1.9.0
        mkdir build
        cd build
        cmake .. -DCLI11_BUILD_TESTS=OFF
        make -j2
        sudo make install
        cd ../..
      if: matrix.os == 'ubuntu-18.04'

    - name: Install dependencies (MacOs)
      run: |
        set -x # echo on
        brew install boost
        git clone https://github.com/google/googletest
        cd googletest
        mkdir build
        cd build
        cmake .. -DCMAKE_CXX_STANDARD=11
        make
        sudo make install
        cd ../..
        git clone https://github.com/fmtlib/fmt.git
        cd fmt
        git checkout 6.2.1
        mkdir build
        cd build
        cmake .. -DFMT_TEST=OFF
        make -j2
        sudo make install
        cd ../..
        git clone https://github.com/CLIUtils/CLI11.git
        cd CLI11
        git checkout v1.9.0
        mkdir build
        cd build
        cmake .. -DCLI11_BUILD_TESTS=OFF
        make -j2
        sudo make install
        cd ../..
      if: matrix.os == 'macos-10.15'

    - name: Configure (std::string_view)
      run: |
        set -x # echo on
        cd $GITHUB_WORKSPACE
        git submodule update --init --recursive
        cd tests/googletest
        cd ../..
        mkdir build
        cd build
        cmake ..
      if: matrix.string_view == 'std'

    - name: Configure (fmt::string_view)
      run: |
        set -x # echo on
        cd $GITHUB_WORKSPACE
        git submodule update --init --recursive
        cd tests/googletest
        cd ../..
        mkdir build
        cd build
        cmake .. -DUSE_FMT_STRING_VIEW=ON
      if: matrix.string_view == 'fmt'

    - name: Build
      run: |
        set -x # echo on
        cd $GITHUB_WORKSPACE/build
        cmake --build .

    - name: Test
      run: |
        set -x # echo on
        cd $GITHUB_WORKSPACE/build
        cmake --test .
